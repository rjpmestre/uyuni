name: Java checkstyle

on:
  push:
    branches:
      - master
    paths:
      - 'java/**.java'
      - 'java/**.xml'
      - '.github/workflows/java-checkstyle.yml'
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    paths:
      # We also trigger on non-java code changes since this triggers sonarcloud scanner after
      - '**.py'
      - 'web/html/src/**.ts'
      - 'web/html/src/**.tsx'
      - 'java/**.java'
      - 'java/**.xml'
      - '.github/workflows/java-checkstyle.yml'

jobs:
  checkstyle:
    runs-on: ubuntu-latest
    container: registry.opensuse.org/systemsmanagement/uyuni/master/docker/containers/uyuni-master-pgsql:latest

    steps:
    - uses: actions/checkout@v4

    - name: Cache dependencies
      id: cache-dependencies
      uses: actions/cache@v4
      with:
        path: java/lib
        key: ${{ runner.os }}-java-lib-${{ hashFiles('java/buildconf/ivy/*.*') }}

    - name: Resolve dependencies
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      run: |
        ant -f java/manager-build.xml ivy

    - name: Run checkstyle
      run: ant -f java/manager-build.xml checkstyle

    - name: Compress build results
      run: tar cf java-build.tar.gz java/build java/lib

    - name: Save PR data to file
      run: |
        echo "PR_NUMBER=${{ github.event.number }}" >>pr_data
        echo "PR_BASE=${{ github.event.pull_request.base.ref }}" >>pr_data

    - name: Archive Java build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: java-built-files
        path: |
          java-build.tar.gz
          pr_data

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.workflow_run.head_repository.full_name }}
        ref: ${{ github.event.workflow_run.head_branch }}
        fetch-depth: 0

    - name: Download Java built artifact
      uses: actions/github-script@v6
      with:
        script: |
          let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
             owner: context.repo.owner,
             repo: context.repo.repo,
             run_id: context.payload.workflow_run.id,
          });
          let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
            return artifact.name == "java-built-files"
          })[0];
          let download = await github.rest.actions.downloadArtifact({
             owner: context.repo.owner,
             repo: context.repo.repo,
             artifact_id: matchArtifact.id,
             archive_format: 'zip',
          });
          let fs = require('fs');
          fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/java-built-files.zip`, Buffer.from(download.data));

    - name: Unzip java built artifact
      run: |
        unzip java-built-files.zip

    - name: Unpacking the build results
      run: tar xf java-build.tar.gz

    - name: Read the PR data file
      run: cat pr_data >>"$GITHUB_ENV"

    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONARQUBE_AUTH_UYUNI }}
      with:
        args: >
          -Dsonar.junit.reportPaths=""
          -Dsonar.coverage.jacoco.xmlReportPaths=""
          -Dsonar.scm.revision=${{ github.event.workflow_run.head_sha }}
          -Dsonar.pullrequest.key=${{ env.PR_NUMBER }}
          -Dsonar.pullrequest.branch=${{ github.event.workflow_run.head_branch }}
          -Dsonar.pullrequest.base=${{ env.PR_BASE }}
